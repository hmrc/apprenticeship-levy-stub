@@
 
 <sch:schema queryBinding='exslt' xmlns:sch='http://purl.oclc.org/dsdl/schematron'>
   <sch:title>Schematron for EmployerPaymentSummary</sch:title>
   <sch:ns prefix='hd' uri='http://www.govtalk.gov.uk/CM/envelope'></sch:ns>
   <sch:ns prefix='dsig' uri='http://www.w3.org/2000/09/xmldsig#'></sch:ns>
-  <sch:ns prefix='eps' uri='http://www.govtalk.gov.uk/taxation/PAYE/RTI/EmployerPaymentSummary/16-17/1'></sch:ns>
+  <sch:ns prefix='eps' uri='http://www.govtalk.gov.uk/taxation/PAYE/RTI/EmployerPaymentSummary/17-18/1'></sch:ns>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:IRheader/eps:Keys/eps:Key'>
       <sch:assert id='a_r1004' diagnostics='errorCode.r1004 transactional.r1004 transactional.en.r1004 ' test='count(../../../../../hd:GovTalkDetails/hd:Keys/hd:Key[@Type = current()/@Type and . = current()]) &gt; 0'>Keys in the IR header must also exist in the GovTalk header with the same value</sch:assert>
     </sch:rule>
   </sch:pattern>
@@
       <sch:assert id='a_PERIODOFINACTIVITY.0' diagnostics='errorCode.PERIODOFINACTIVITY.0 transactional.PERIODOFINACTIVITY.0 transactional.en.PERIODOFINACTIVITY.0 ' test="(round(date:seconds(normalize-space(eps:To)) div 86400) &lt;= round(date:seconds(normalize-space(date:add(normalize-space(eps:From),normalize-space('P12M')))) div 86400))">[PERIODOFINACTIVITY] must be less than or equal to 12 months.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RecoverableAmountsYTD/eps:TaxMonth'>
-      <sch:assert id='a_TAXMONTH.1' diagnostics='errorCode.TAXMONTH.1 transactional.TAXMONTH.1 transactional.en.TAXMONTH.1 ' test="not('1' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-03-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-05-19'))) div 86400))             )">A [TAXMONTH] equal to 1 is only valid if the submission is made between 6 March of the tax year before [RELATEDTAXYEAR] and 19 May of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.2' diagnostics='errorCode.TAXMONTH.2 transactional.TAXMONTH.2 transactional.en.TAXMONTH.2 ' test="not('2' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-04-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-06-19'))) div 86400))             )">A [TAXMONTH] equal to 2 is only valid if the submission is made between 6 April and 19 June of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.3' diagnostics='errorCode.TAXMONTH.3 transactional.TAXMONTH.3 transactional.en.TAXMONTH.3 ' test="not('3' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-05-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-07-19'))) div 86400))             )">A [TAXMONTH] equal to 3 is only valid if the submission is made between 6 May and 19 July of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.4' diagnostics='errorCode.TAXMONTH.4 transactional.TAXMONTH.4 transactional.en.TAXMONTH.4 ' test="not('4' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-06-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-08-19'))) div 86400))             )">A [TAXMONTH] equal to 4 is only valid if the submission is made between 6 June and 19 August of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.5' diagnostics='errorCode.TAXMONTH.5 transactional.TAXMONTH.5 transactional.en.TAXMONTH.5 ' test="not('5' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-07-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-09-19'))) div 86400))             )">A [TAXMONTH] equal to 5 is only valid if the submission is made between 6 July and 19 September of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.6' diagnostics='errorCode.TAXMONTH.6 transactional.TAXMONTH.6 transactional.en.TAXMONTH.6 ' test="not('6' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-08-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-10-19'))) div 86400))             )">A [TAXMONTH] equal to 6 is only valid if the submission is made between 6 August and 19 October of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.7' diagnostics='errorCode.TAXMONTH.7 transactional.TAXMONTH.7 transactional.en.TAXMONTH.7 ' test="not('7' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-09-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-11-19'))) div 86400))             )">A [TAXMONTH] equal to 7 is only valid if the submission is made between 6 September and 19 November of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.8' diagnostics='errorCode.TAXMONTH.8 transactional.TAXMONTH.8 transactional.en.TAXMONTH.8 ' test="not('8' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-10-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017 - 1, '-12-19'))) div 86400))             )">A [TAXMONTH] equal to 8 is only valid if the submission is made between 6 October and 19 December of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.9' diagnostics='errorCode.TAXMONTH.9 transactional.TAXMONTH.9 transactional.en.TAXMONTH.9 ' test="not('9' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-11-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017, '-01-19'))) div 86400))             )">A [TAXMONTH] equal to 9 is only valid if the submission is made between 6 November and 19 January of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.10' diagnostics='errorCode.TAXMONTH.10 transactional.TAXMONTH.10 transactional.en.TAXMONTH.10 ' test="not('10' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017 - 1, '-12-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017, '-02-19'))) div 86400))             )">A [TAXMONTH] equal to 10 is only valid if the submission is made between 6 December and 19 February of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.11' diagnostics='errorCode.TAXMONTH.11 transactional.TAXMONTH.11 transactional.en.TAXMONTH.11 ' test="not('11' = (.))               or             (               (round(date:seconds(normalize-space(concat(2017, '-01-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2017, '-03-19'))) div 86400))             )">A [TAXMONTH] equal to 11 is only valid if the submission is made between 6 January and 19 March of [RELATEDTAXYEAR] inclusive.</sch:assert>
-      <sch:assert id='a_TAXMONTH.12' diagnostics='errorCode.TAXMONTH.12 transactional.TAXMONTH.12 transactional.en.TAXMONTH.12 ' test="not('12' = (.))               or             (round(date:seconds(normalize-space(concat(2017, '-02-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))">A [TAXMONTH] equal to 12 is only valid if the submission is made on or after 6 February of [RELATEDTAXYEAR].</sch:assert>
+      <sch:assert id='a_TAXMONTH.1' diagnostics='errorCode.TAXMONTH.1 transactional.TAXMONTH.1 transactional.en.TAXMONTH.1 ' test="not('1' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-03-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-05-19'))) div 86400))             )">A [TAXMONTH] equal to 1 is only valid if the submission is made between 6 March of the tax year before [RELATEDTAXYEAR] and 19 May of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.2' diagnostics='errorCode.TAXMONTH.2 transactional.TAXMONTH.2 transactional.en.TAXMONTH.2 ' test="not('2' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-04-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-06-19'))) div 86400))             )">A [TAXMONTH] equal to 2 is only valid if the submission is made between 6 April and 19 June of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.3' diagnostics='errorCode.TAXMONTH.3 transactional.TAXMONTH.3 transactional.en.TAXMONTH.3 ' test="not('3' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-05-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-07-19'))) div 86400))             )">A [TAXMONTH] equal to 3 is only valid if the submission is made between 6 May and 19 July of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.4' diagnostics='errorCode.TAXMONTH.4 transactional.TAXMONTH.4 transactional.en.TAXMONTH.4 ' test="not('4' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-06-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-08-19'))) div 86400))             )">A [TAXMONTH] equal to 4 is only valid if the submission is made between 6 June and 19 August of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.5' diagnostics='errorCode.TAXMONTH.5 transactional.TAXMONTH.5 transactional.en.TAXMONTH.5 ' test="not('5' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-07-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-09-19'))) div 86400))             )">A [TAXMONTH] equal to 5 is only valid if the submission is made between 6 July and 19 September of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.6' diagnostics='errorCode.TAXMONTH.6 transactional.TAXMONTH.6 transactional.en.TAXMONTH.6 ' test="not('6' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-08-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-10-19'))) div 86400))             )">A [TAXMONTH] equal to 6 is only valid if the submission is made between 6 August and 19 October of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.7' diagnostics='errorCode.TAXMONTH.7 transactional.TAXMONTH.7 transactional.en.TAXMONTH.7 ' test="not('7' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-09-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-11-19'))) div 86400))             )">A [TAXMONTH] equal to 7 is only valid if the submission is made between 6 September and 19 November of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.8' diagnostics='errorCode.TAXMONTH.8 transactional.TAXMONTH.8 transactional.en.TAXMONTH.8 ' test="not('8' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-10-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018 - 1, '-12-19'))) div 86400))             )">A [TAXMONTH] equal to 8 is only valid if the submission is made between 6 October and 19 December of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.9' diagnostics='errorCode.TAXMONTH.9 transactional.TAXMONTH.9 transactional.en.TAXMONTH.9 ' test="not('9' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-11-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018, '-01-19'))) div 86400))             )">A [TAXMONTH] equal to 9 is only valid if the submission is made between 6 November and 19 January of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.10' diagnostics='errorCode.TAXMONTH.10 transactional.TAXMONTH.10 transactional.en.TAXMONTH.10 ' test="not('10' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018 - 1, '-12-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018, '-02-19'))) div 86400))             )">A [TAXMONTH] equal to 10 is only valid if the submission is made between 6 December and 19 February of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.11' diagnostics='errorCode.TAXMONTH.11 transactional.TAXMONTH.11 transactional.en.TAXMONTH.11 ' test="not('11' = (.))               or             (               (round(date:seconds(normalize-space(concat(2018, '-01-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))                 and               (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2018, '-03-19'))) div 86400))             )">A [TAXMONTH] equal to 11 is only valid if the submission is made between 6 January and 19 March of [RELATEDTAXYEAR] inclusive.</sch:assert>
+      <sch:assert id='a_TAXMONTH.12' diagnostics='errorCode.TAXMONTH.12 transactional.TAXMONTH.12 transactional.en.TAXMONTH.12 ' test="not('12' = (.))               or             (round(date:seconds(normalize-space(concat(2018, '-02-06'))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))">A [TAXMONTH] equal to 12 is only valid if the submission is made on or after 6 February of [RELATEDTAXYEAR].</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RecoverableAmountsYTD'>
       <sch:assert id='a_PAYMENTFORPERIOD.0' diagnostics='errorCode.PAYMENTFORPERIOD.0 transactional.PAYMENTFORPERIOD.0 transactional.en.PAYMENTFORPERIOD.0 ' test='eps:SMPRecovered or            eps:SPPRecovered or            eps:SAPRecovered or            eps:ShPPRecovered or            eps:NICCompensationOnSMP or            eps:NICCompensationOnSPP or            eps:NICCompensationOnSAP or            eps:NICCompensationOnShPP or            eps:CISDeductionsSuffered'>If [RECOVERABLEAMOUNTSYEARTODATE] is present, at least one of [SMPRECOVERED] or [SPPRECOVERED] or [SAPRECOVERED] or [SHPPRECOVERED] or [NICCOMPENSATIONONSMP] or [NICCOMPENSATIONONSPP] or [NICCOMPENSATIONONSAP] or [NICCOMPENSATIONONSHPP] or [CISDEDUCTIONSSUFFERED] must be present.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RelatedTaxYear'>
-      <sch:assert id='a_RELATEDTAXYEAR.0' diagnostics='errorCode.RELATEDTAXYEAR.0 transactional.RELATEDTAXYEAR.0 transactional.en.RELATEDTAXYEAR.0 ' test='substring(string(2017 - 1), 3, 2) = substring(., 1, 2)           and             substring(2017, 3, 2) = substring(., 4, 2)'>Must be the appropriate tax year for the schema year. I.E. 16-17 for RTI-2017</sch:assert>
+      <sch:assert id='a_RELATEDTAXYEAR.0' diagnostics='errorCode.RELATEDTAXYEAR.0 transactional.RELATEDTAXYEAR.0 transactional.en.RELATEDTAXYEAR.0 ' test='substring(string(2018 - 1), 3, 2) = substring(., 1, 2)           and             substring(2018, 3, 2) = substring(., 4, 2)'>Must be the appropriate tax year for the schema year. I.E. 17-18 for RTI-2018</sch:assert>
       <sch:assert id='a_RELATEDTAXYEAR.2' diagnostics='errorCode.RELATEDTAXYEAR.2 transactional.RELATEDTAXYEAR.2 transactional.en.RELATEDTAXYEAR.2 ' test="(round(date:seconds(normalize-space(concat(2000 + number(substring(.,1,2)), '-04-06'))) div 86400) &lt;= round(date:seconds(normalize-space(../../eps:IRheader/eps:PeriodEnd)) div 86400))         and           (round(date:seconds(normalize-space(../../eps:IRheader/eps:PeriodEnd)) div 86400) &lt;= round(date:seconds(normalize-space(concat(2001 + number(substring(.,1,2)), '-04-05'))) div 86400))">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:FinalSubmission/eps:BecauseSchemeCeased'>
@@
     </sch:rule>
   </sch:pattern>
   <sch:pattern>
     <sch:rule context='/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary'>
       <sch:assert id='a_EPS.1' diagnostics='errorCode.EPS.1 transactional.EPS.1 transactional.en.EPS.1 ' test="../../../hd:Header/hd:MessageDetails/hd:Class = 'HMRC-PAYE-RTI-EPS'           or           ../../../hd:Header/hd:MessageDetails/hd:Class = 'HMRC-PAYE-RTI-EPS-TIL'">Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:assert>
-      <sch:assert id='a_EPS.0' diagnostics='errorCode.EPS.0 transactional.EPS.0 transactional.en.EPS.0 ' test='eps:NoPaymentForPeriod or eps:PeriodOfInactivity or eps:EmpAllceInd or eps:RecoverableAmountsYTD or eps:Account or eps:FinalSubmission'>At least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [ACCOUNTINFORMATION] or [FINALSUBMISSION] must be submitted.</sch:assert>
+      <sch:assert id='a_EPS.0' diagnostics='errorCode.EPS.0 transactional.EPS.0 transactional.en.EPS.0 ' test='eps:NoPaymentForPeriod or eps:PeriodOfInactivity or eps:EmpAllceInd or eps:RecoverableAmountsYTD or eps:ApprenticeshipLevy or eps:Account or eps:FinalSubmission'>At least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION] must be submitted.</sch:assert>
     </sch:rule>
   </sch:pattern>
   <sch:diagnostics>
     <sch:diagnostic id='errorCode.r1005'>5004</sch:diagnostic>
     <sch:diagnostic id='transactional.r1005'>At least one key must exist in the IRheader</sch:diagnostic>
@@
     <sch:diagnostic id='transactional.en.r1004' xml:lang='en'>Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
     <sch:diagnostic id='errorCode.EPS.1'>7838</sch:diagnostic>
     <sch:diagnostic id='transactional.EPS.1'>Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:diagnostic>
     <sch:diagnostic id='transactional.en.EPS.1' xml:lang='en'>Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:diagnostic>
     <sch:diagnostic id='errorCode.EPS.0'>7913</sch:diagnostic>
-    <sch:diagnostic id='transactional.EPS.0'>On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
-    <sch:diagnostic id='transactional.en.EPS.0' xml:lang='en'>On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
+    <sch:diagnostic id='transactional.EPS.0'>On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
+    <sch:diagnostic id='transactional.en.EPS.0' xml:lang='en'>On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
     <sch:diagnostic id='errorCode.HMRCOFFICENUMBER.0'>7821</sch:diagnostic>
     <sch:diagnostic id='transactional.HMRCOFFICENUMBER.0'>The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
     <sch:diagnostic id='transactional.en.HMRCOFFICENUMBER.0' xml:lang='en'>The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
     <sch:diagnostic id='errorCode.EMPLOYERPAYEREF.0'>7822</sch:diagnostic>
     <sch:diagnostic id='transactional.EMPLOYERPAYEREF.0'>The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:diagnostic>
